let budgetChart,investmentChart,netSalaryInput=document.getElementById("net-salary"),needsAmountInput=document.getElementById("needs-amount"),wantsAmountInput=document.getElementById("wants-amount"),savingsAmountInput=document.getElementById("savings-amount"),stocksPercentageInput=document.getElementById("stocks-percentage"),stocksGrowthInput=document.getElementById("stocks-return-rate"),stocksGrowthPatternSelect=document.getElementById("stocks-growth-pattern"),bankPercentageInput=document.getElementById("bank-percentage"),bankGrowthInput=document.getElementById("bank-interest-rate"),stocksCompoundingSelect=document.getElementById("stocks-compounding"),bankCompoundingSelect=document.getElementById("bank-compounding"),budgetRuleButtons=document.querySelectorAll(".budget-rule-btn"),statusIcons=document.querySelectorAll(".status-icon"),projectionYearsSelect=document.getElementById("projection-years"),investmentDetailsToggle=document.getElementById("investment-details-toggle"),mathExplanation=document.getElementById("math-explanation"),totalProgress=document.getElementById("total-progress"),totalPercentage=document.getElementById("total-percentage"),stocksGrowthPattern="yearly",stocksCompoundingFrequency="monthly",bankCompoundingFrequency="monthly",stocksRedeemFrequency="yearly",bankRedeemFrequency="yearly",bankCompoundingType="compound",showAdvancedExplanations=!1,budgetRules={"50-30-20":{needs:50,wants:30,savings:20,description:"The 50-30-20 rule suggests allocating 50% of your income to needs (essential expenses), 30% to wants (non-essential expenses), and 20% to savings and debt repayment.",examples:{needs:"Rent/mortgage, utilities, groceries, insurance, minimum debt payments",wants:"Dining out, entertainment, shopping, hobbies, vacations",savings:"Emergency fund, retirement accounts, investments, additional debt payments"}},"60-20-20":{needs:60,wants:20,savings:20,description:"The 60-20-20 rule is a more conservative approach, allocating 60% to needs, 20% to wants, and 20% to savings, suitable for those with higher essential expenses.",examples:{needs:"Housing in expensive areas, medical expenses, family necessities",wants:"Occasional treats, basic entertainment, modest shopping",savings:"Retirement savings, education fund, long-term investments"}},custom:{needs:0,wants:0,savings:0,description:"Custom allocation allows you to set your own percentages based on your unique financial situation and goals.",examples:{needs:"Essential expenses that must be paid",wants:"Non-essential expenses that improve quality of life",savings:"Money set aside for future goals and security"}}};function initializeTooltips(){document.querySelectorAll(".budget-rule-btn").forEach(t=>{var e=t.dataset.rule;t.title=budgetRules[e].description});var t=getCurrentRule(),e=document.querySelector(".needs-title"),n=document.querySelector(".wants-title"),a=document.querySelector(".savings-title");e.title="Examples: "+budgetRules[t].examples.needs,n.title="Examples: "+budgetRules[t].examples.wants,a.title="Examples: "+budgetRules[t].examples.savings}function initializeCharts(){var t=document.getElementById("budget-chart").getContext("2d"),t=(budgetChart=new Chart(t,{type:"doughnut",data:{labels:["Needs","Wants","Savings"],datasets:[{data:[0,0,0],backgroundColor:["#4F46E5","#EC4899","#10B981"],borderWidth:0}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"bottom",align:"center",labels:{padding:15,font:{size:14},boxWidth:12,usePointStyle:!0}},tooltip:{callbacks:{label:function(t){var e=t.raw,n=(e/t.dataset.data.reduce((t,e)=>t+e,0)*100).toFixed(1);return`${t.label}: ${formatCurrency(e)} (${n}%)`}}}}}}),document.getElementById("investment-chart").getContext("2d"));investmentChart=new Chart(t,{type:"doughnut",data:{labels:["Stocks","Savings Bank"],datasets:[{data:[40,60],backgroundColor:["#F59E0B","#3B82F6"],borderWidth:0}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"bottom",align:"center",labels:{padding:15,font:{size:14},boxWidth:12,usePointStyle:!0}},tooltip:{callbacks:{label:function(t){var e=parseFloat(savingsAmountInput.value)||0,n=t.raw;return`${t.label}: ${formatCurrency(e*(n/100))} (${n}%)`}}}}}})}function formatCurrency(t){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0}).format(t)}function updateBudgetAmounts(t){var e=parseFloat(netSalaryInput.value)||0,t=budgetRules[t];needsAmountInput.value=Math.round(e*t.needs/100),wantsAmountInput.value=Math.round(e*t.wants/100),savingsAmountInput.value=Math.round(e*t.savings/100),updateBudgetStatus(),updateCharts(),updateSummary(),calculateProjection()}function updateBudgetStatus(){var t=parseFloat(netSalaryInput.value.replace(/,/g,""))||0,e=parseFloat(needsAmountInput.value.replace(/,/g,""))||0,n=parseFloat(wantsAmountInput.value.replace(/,/g,""))||0,a=parseFloat(savingsAmountInput.value.replace(/,/g,""))||0,o=(0===e&&0===n&&0===a&&0<t&&(o=getCurrentRule(),needsAmountInput.value=Math.round(t*budgetRules[o].needs/100),wantsAmountInput.value=Math.round(t*budgetRules[o].wants/100),savingsAmountInput.value=Math.round(t*budgetRules[o].savings/100)),""===needsAmountInput.value&&(needsAmountInput.value="0"),""===wantsAmountInput.value&&(wantsAmountInput.value="0"),""===savingsAmountInput.value&&(savingsAmountInput.value="0"),e/t*100||0),e=n/t*100||0,n=a/t*100||0,t=o+e+n,t=(totalProgress.style.width=Math.min(t,100)+"%",totalProgress.style.background=100<t?"#EF4444":"#10B981",totalPercentage.textContent=t.toFixed(1)+"%",totalPercentage.style.color=100<t?"#EF4444":"#10B981",document.getElementById("current-savings").textContent=formatCurrency(a).replace("$",""),getCurrentRule());document.querySelector(".needs-percentage").textContent=o.toFixed(1)+"%",document.querySelector(".wants-percentage").textContent=e.toFixed(1)+"%",document.querySelector(".savings-percentage").textContent=n.toFixed(1)+"%",statusIcons[0].textContent=o>budgetRules[t].needs?"👎":"👍",statusIcons[0].title=o>budgetRules[t].needs?"Outside budget: Spending too much on needs":"Within budget: Needs spending is on track",statusIcons[1].textContent=e>budgetRules[t].wants?"👎":"👍",statusIcons[1].title=e>budgetRules[t].wants?"Outside budget: Spending too much on wants":"Within budget: Wants spending is on track",statusIcons[2].textContent=n>budgetRules[t].savings?"👎":"👍",statusIcons[2].title=n>budgetRules[t].savings?"Outside budget: Saving more than planned":"Within budget: Savings are on track",updateInvestmentSliders()}function getCurrentRule(){return document.querySelector(".budget-rule-btn.active").dataset.rule}function updateCharts(){var t=parseFloat(needsAmountInput.value)||0,e=parseFloat(wantsAmountInput.value)||0,n=parseFloat(savingsAmountInput.value)||0,t=(budgetChart&&(budgetChart.data.datasets[0].data=[t,e,n],budgetChart.update()),parseFloat(stocksPercentageInput.value)||40),e=parseFloat(bankPercentageInput.value)||60;investmentChart&&(investmentChart.data.datasets[0].data=[t,e],investmentChart.update()),document.querySelector(".stocks-amount").textContent=formatCurrency(n*(t/100)),document.querySelector(".bank-amount").textContent=formatCurrency(n*(e/100))}function updateSummary(){var t=currentChartView||"monthly",e=parseFloat(savingsAmountInput.value.replace(/,/g,""))||0,n=parseFloat(stocksPercentageInput.value)||40,a=parseFloat(bankPercentageInput.value)||60,o=parseFloat(stocksGrowthInput.value)||15,r=parseFloat(bankGrowthInput.value)||7,s=parseInt(projectionYearsSelect.value)||3,u=calculateYearlyData();let l=1,i="Monthly";switch(t){case"yearly":l=12,i="Annual";break;case"projection":l=12*s,i=s+"-Year"}e*=l;document.getElementById("summary-savings").textContent=formatCurrency(e);let c=0,d=0,p=0;0<u.length&&("monthly"===t?u[0]&&(c=u[0].growth/12):"yearly"===t?u[0]&&(c=u[0].growth):(t=u[u.length-1],c=t.endingBalance-e),0<c)&&(100===n?(d=c,p=0):100===a||0===n?(d=0,p=c):0<(n=(u=n*o)+(t=a*r))&&(d=c*(u/n),p=c*(t/n))),document.getElementById("summary-growth").textContent=formatCurrency(c),document.getElementById("stocks-growth-amount").textContent=formatCurrency(d),document.getElementById("bank-growth-amount").textContent=formatCurrency(p);o=e+c,document.getElementById("summary-balance").textContent=formatCurrency(o),a=document.querySelectorAll(".card-title");a[0].textContent=i+" Savings",a[1].textContent=i+" Investment Growth",a[2].textContent=i+" End Balance"}function toggleGrowthBreakdown(t){t=t.currentTarget.nextElementSibling;t.classList.contains("growth-breakdown")&&t.classList.toggle("show")}function toggleAdvancedExplanations(){showAdvancedExplanations=!showAdvancedExplanations;document.querySelectorAll(".advanced-explanation").forEach(t=>{t.style.display=showAdvancedExplanations?"block":"none"});var t=document.getElementById("toggle-explanations");t&&(t.textContent=showAdvancedExplanations?"Hide Explanations":"Show Explanations"),updateMathExplanation()}function calculateYearlyData(){var s=parseFloat(savingsAmountInput.value)||0,u=parseFloat(stocksPercentageInput.value)||0,t=parseFloat(stocksGrowthInput.value)||15,l=parseFloat(bankPercentageInput.value)||100,i=parseFloat(bankGrowthInput.value)||7,c=parseInt(projectionYearsSelect.value)||3,d=s*(u/100),p=s*(l/100);let m=0,g=0,y=0;var h=[];let v,k;let b=0,e,w=(v="reinvest"!==stocksGrowthPattern&&"monthly"!==stocksGrowthPattern&&"yearly"===stocksGrowthPattern?(e="yearly",t/100):(e="monthly",Math.pow(1+t/100,1/12)-1),k="simple"===bankCompoundingType?i/100/12:"monthly"===bankCompoundingFrequency?Math.pow(1+i/100,1/12)-1:"quarterly"===bankCompoundingFrequency?Math.pow(1+i/100,.25)-1:i/100,0),C=0;for(let r=1;r<=c;r++){var I,F=m,E=g,f=y;let t=0,n=0,a=0;for(let e=1;e<=12;e++){if(0<u?(g+=d,"maturity"===stocksGrowthPattern&&(w+=d),"reinvest"===stocksGrowthPattern?(I=g*v,g+=I,t+=I):"monthly"===stocksGrowthPattern?(I=g*v,t+=I):"yearly"===stocksGrowthPattern&&12===e?(S=g*v,t=S):"maturity"===stocksGrowthPattern&&(w*=1+v,r===c)&&12===e&&(t=w-12*d*r)):(g+=d,"maturity"===stocksGrowthPattern&&(w+=d)),0<l){if(y+=p,"maturity"===bankRedeemFrequency&&(C+=p),"simple"===bankCompoundingType){var x,S=13-e;a+=i/100*p*(S/12),"monthly"===bankRedeemFrequency?(x=y*(i/100)/12,n+=x,b+=x,12===e&&(y+=b,b=0)):"yearly"===bankRedeemFrequency&&12===e?(y+=a,n+=a):"maturity"===bankRedeemFrequency&&12===e&&(b+=a,n+=a)}else if("monthly"===bankCompoundingFrequency||"quarterly"===bankCompoundingFrequency&&e%3==0||"yearly"===bankCompoundingFrequency&&12===e){let t=0;("monthly"===bankCompoundingFrequency||"quarterly"===bankCompoundingFrequency&&e%3==0||"yearly"===bankCompoundingFrequency&&12===e)&&(t=y*k),n+=t,"maturity"===bankRedeemFrequency?(("monthly"===bankCompoundingFrequency||"quarterly"===bankCompoundingFrequency&&e%3==0||"yearly"===bankCompoundingFrequency&&12===e)&&(C*=1+k),b+=t):"monthly"===bankRedeemFrequency?(b+=t,12===e&&(y+=b,b=0)):"yearly"===bankRedeemFrequency&&12===e?(y+=t+b,b=0):b+=t}}else y+=p,"maturity"===bankRedeemFrequency&&(C+=p);m="maturity"===stocksGrowthPattern&&"maturity"===bankRedeemFrequency?w+C:"maturity"===stocksGrowthPattern?w+y:"maturity"===bankRedeemFrequency?g+C:g+y}let e,o;e="maturity"===stocksGrowthPattern?r===c?w-12*d*r:0:"reinvest"===stocksGrowthPattern?g-E-12*d:t,o="maturity"===bankRedeemFrequency?(r===c&&(C+=b),C-12*p*r):"simple"===bankCompoundingType&&"yearly"===bankRedeemFrequency?a:y-f-12*p;E=e+o;h.push({year:r,startingBalance:F,monthlySavings:12*s,growth:E,stocksGrowth:e,bankGrowth:o,endingBalance:m})}return h}function updateView(t){updateChartView(currentChartView=t),updateInvestmentChartView(t),calculateProjection(),updateSummary()}function calculateProjection(){parseFloat(savingsAmountInput.value.replace(/,/g,"")),parseFloat(stocksPercentageInput.value),parseFloat(stocksGrowthInput.value),parseFloat(bankPercentageInput.value),parseFloat(bankGrowthInput.value),parseInt(projectionYearsSelect.value);updateYearlyBreakdown(calculateYearlyData()),updateSummary()}function updateMathExplanation(){var t=parseFloat(savingsAmountInput.value.replace(/,/g,""))||0,e=parseFloat(stocksPercentageInput.value)||40,n=parseFloat(stocksGrowthInput.value)||15,a=parseFloat(bankPercentageInput.value)||60,o=parseFloat(bankGrowthInput.value)||7,r=t*(e/100),t=t*(a/100);let s,u,l=(s="reinvest"===stocksGrowthPattern||"monthly"===stocksGrowthPattern||"maturity"===stocksGrowthPattern?100*(Math.pow(1+n/100,1/12)-1):n/12,u="simple"===bankCompoundingType?o/12:"monthly"===bankCompoundingFrequency?100*(Math.pow(1+o/100,1/12)-1):"quarterly"===bankCompoundingFrequency?100*(Math.pow(1+o/100,.25)-1)/3:o/12,""),i="",c=("reinvest"===stocksGrowthPattern?(l=`(1 + ${n}/100)<sup>1/12</sup> - 1 = `+(s/100).toFixed(5),i="Reinvesting gains (compound growth)"):"monthly"===stocksGrowthPattern?(l=`(1 + ${n}/100)<sup>1/12</sup> - 1 = `+(s/100).toFixed(5),i=`Monthly redemption at ${s.toFixed(2)}% per month`):"yearly"===stocksGrowthPattern?(l=`${n}/12 = ${(n/12).toFixed(2)}%`,i=`Yearly redemption at ${n}% per year`):"maturity"===stocksGrowthPattern&&(l=`(1 + ${n}/100)<sup>1/12</sup> - 1 = `+(s/100).toFixed(5),i="Compounding until maturity (redeem at end)"),"");c="simple"===bankCompoundingType?o+`/12 = ${(o/12).toFixed(2)}%`:"monthly"===bankCompoundingFrequency?`(1 + ${o}/100)<sup>1/12</sup> - 1 = `+(u/100).toFixed(5):"quarterly"===bankCompoundingFrequency?`(1 + ${o}/100)<sup>1/4</sup> - 1 = `+(Math.pow(1+o/100,.25)-1).toFixed(5):`${o}/12 = ${(o/12).toFixed(2)}%`;r=`
        <p>Monthly Allocation:</p>
        <ul>
            <li>Stocks: ${formatCurrency(r)} (${e}% of savings at ${n}% annual return)</li>
            <li>Savings Bank: ${formatCurrency(t)} (${a}% of savings at ${o}% interest rate)</li>
        </ul>
        <p>Growth Calculation:</p>
        <ul>
            <li>Stocks: ${i}</li>
            <li>Effective Monthly Return Rate: ${s.toFixed(2)}%</li>
            <li>Bank: ${bankCompoundingType} interest, ${bankCompoundingFrequency} compounding, ${bankRedeemFrequency} redemption</li>
            <li>Effective Monthly Interest Rate: ${u.toFixed(2)}%</li>
        </ul>
        <div class="advanced-explanation" style="display: ${showAdvancedExplanations?"block":"none"}">
            <p><strong>Rate Conversion Formulas:</strong></p>
            <ul>
                <li><strong>Stocks Monthly Rate:</strong> ${l}</li>
                <li><strong>Bank Monthly Rate:</strong> ${c}</li>
            </ul>
            <p><small>Note: A 12% annual rate is not the same as 1% monthly. When compounded, 1% monthly equals approximately 12.68% annually.</small></p>
        </div>
    `;mathExplanation.innerHTML=r}function updateProjectionSummary(t,e){e=t-12*(parseFloat(savingsAmountInput.value)||0)*e;document.getElementById("summary-projection").textContent=formatCurrency(t),document.getElementById("summary-growth").textContent=formatCurrency(e)}function updateYearlyBreakdown(t){let r=document.getElementById("results-table-body");var e=document.getElementById("results-table-header"),n=(r.innerHTML="",e&&(e.innerHTML=""),currentChartView||"monthly"),s=parseInt(projectionYearsSelect.value)||3,a=document.createElement("tr");if("monthly"===n){var u=parseFloat(savingsAmountInput.value.replace(/,/g,""))||0,l=parseFloat(stocksPercentageInput.value)||0,i=parseFloat(bankPercentageInput.value)||100;a.innerHTML=`
            <th>Month</th>
            <th>Starting Balance</th>
            <th>Monthly Savings</th>
            <th class="operation-cell"></th>
            <th>Monthly Growth</th>
            <th class="operation-cell"></th>
            <th>Ending Balance</th>
        `,e&&e.appendChild(a);let o=0;for(let a=1;a<=s;a++){var c=t[a-1],d=c?c.growth/12:0;for(let n=1;n<=12;n++){var p=12*(a-1)+n,m=o,g=d/12,y=(o+=u+g,0<l?l*parseFloat(stocksGrowthInput.value):0),h=0<i?i*parseFloat(bankGrowthInput.value):0,v=y+h;let t=0,e=0;0<v&&(t=y/v*g,e=h/v*g);y=document.createElement("tr");y.innerHTML=`
                    <td>${p}</td>
                    <td>${formatCurrency(m)}</td>
                    <td>${formatCurrency(u)}</td>
                    <td class="operation-cell">+</td>
                    <td>
                        <div class="growth-cell">
                            <div class="growth-total" onclick="toggleGrowthBreakdown(event)">
                                ${formatCurrency(g)}
                                <span class="toggle-breakdown">[Details]</span>
                            </div>
                            <div class="growth-breakdown">
                                <div class="stocks-growth">Stocks: ${formatCurrency(t)}</div>
                                <div class="bank-growth">Bank: ${formatCurrency(e)}</div>
                            </div>
                        </div>
                    </td>
                    <td class="operation-cell">=</td>
                    <td>${formatCurrency(o)}</td>
                `,r.appendChild(y)}}}else"yearly"!==n&&"projection"!==n||(n=t,a.innerHTML=`
            <th>Year</th>
            <th>Starting Balance</th>
            <th>Annual Savings</th>
            <th class="operation-cell"></th>
            <th>Investment Growth</th>
            <th class="operation-cell"></th>
            <th>Ending Balance</th>
        `,e&&e.appendChild(a),n.forEach(t=>{var e=document.createElement("tr");let n="";(0<t.stocksGrowth||0<t.bankGrowth)&&(n=`
                    <div class="advanced-explanation" style="display: ${showAdvancedExplanations?"block":"none"}">
                        <p><strong>How Growth is Calculated:</strong></p>
                        <ul>
                            <li><strong>Stocks:</strong> ${formatCurrency(t.stocksGrowth)}
                                <br><small>${stocksRedeemFrequency} redemption with ${stocksCompoundingFrequency} compounding</small>
                            </li>
                            <li><strong>Bank:</strong> ${formatCurrency(t.bankGrowth)}
                                <br><small>${bankCompoundingType} interest with ${bankCompoundingFrequency} compounding, ${bankRedeemFrequency} redemption</small>
                            </li>
                        </ul>
                    </div>
                `),e.innerHTML=`
                <td>${t.year}</td>
                <td>${formatCurrency(t.startingBalance)}</td>
                <td>${formatCurrency(t.monthlySavings)}</td>
                <td class="operation-cell">+</td>
                <td>
                    <div class="growth-cell">
                        <div class="growth-total" onclick="toggleGrowthBreakdown(event)">
                            ${formatCurrency(t.growth)}
                            <span class="toggle-breakdown">[Details]</span>
                        </div>
                        <div class="growth-breakdown">
                            <div class="stocks-growth">Stocks: ${formatCurrency(t.stocksGrowth)}</div>
                            <div class="bank-growth">Bank: ${formatCurrency(t.bankGrowth)}</div>
                            ${n}
                        </div>
                    </div>
                </td>
                <td class="operation-cell">=</td>
                <td>${formatCurrency(t.endingBalance)}</td>
            `,r.appendChild(e)}))}function updateSliderPercentage(t,e){var n=t.value;e.textContent=n+"%",t.style.setProperty("--slider-percentage",n+"%")}function initializeSliders(){let e=document.getElementById("stocks-percentage"),n=document.getElementById("bank-percentage");e.setAttribute("min","0"),e.setAttribute("max","100"),n.setAttribute("min","0"),n.setAttribute("max","100"),e.value=40,n.value=60,e.addEventListener("input",t=>{t=parseInt(t.target.value,10);n.value=100-t,0===t?n.value=100:100===t&&(n.value=0),updateInvestmentSliders()}),n.addEventListener("input",t=>{t=parseInt(t.target.value,10);e.value=100-t,0===t?e.value=100:100===t&&(e.value=0),updateInvestmentSliders()}),updateInvestmentSliders()}document.querySelectorAll(".chart-view-btn").forEach(e=>{e.addEventListener("click",()=>{var t=e.dataset.view;document.querySelectorAll(".chart-view-btn").forEach(t=>t.classList.remove("active")),e.classList.add("active"),updateView(t)})});let currentChartView="monthly";function parseInputValue(t){return parseFloat(t.value.replace(/,/g,""))||0}function updateInvestmentSliders(){var t=parseFloat(savingsAmountInput.value.replace(/,/g,""))||0,e=parseInt(stocksPercentageInput.value,10)||0,n=100-e,a=Math.round(t*(e/100)),t=Math.round(t*(n/100));document.querySelector(".stocks-amount").textContent=formatCurrency(a),document.querySelector(".bank-amount").textContent=formatCurrency(t),document.querySelector(".stocks-percentage").textContent=e+"%",document.querySelector(".bank-percentage").textContent=n+"%",updateMathExplanation(),updateInvestmentChartView(currentChartView),calculateProjection(),updateSummary()}function updateChartView(e){const t=parseFloat(needsAmountInput.value)||0,n=parseFloat(wantsAmountInput.value)||0,a=parseFloat(savingsAmountInput.value)||0;let o=1;switch(e){case"yearly":o=12;break;case"projection":var r=parseInt(projectionYearsSelect.value)||3;o=12*r}budgetChart.data.datasets[0].data=[t*o,n*o,a*o],budgetChart.data.labels=["Needs","Wants","Savings"].map(t=>{switch(e){case"yearly":return t+" (Annual)";case"projection":return`${t} (${projectionYearsSelect.value}yr)`;default:return t+" (Monthly)"}}),budgetChart.update()}function updateInvestmentChartView(e){var t=parseFloat(savingsAmountInput.value)||0,n=parseFloat(stocksPercentageInput.value)||40,a=100-n;let o=parseInt(projectionYearsSelect.value)||3,r=1;switch(e){case"yearly":r=12;break;case"projection":r=12*o}let s=t*(n/100)*r,u=t*(a/100)*r;investmentChart.data.datasets[0].data=[n,a],investmentChart.options.plugins.tooltip.callbacks.label=function(t){var e=0===t.dataIndex?s:u,n=t.raw;return`${t.label}: ${formatCurrency(e)} (${n}%)`},investmentChart.data.labels=["Stocks","Savings Bank"].map(t=>{switch(e){case"yearly":return t+" (Annual)";case"projection":return`${t} (${o}yr)`;default:return t+" (Monthly)"}}),investmentChart.update()}function parseCurrency(t){return t&&parseFloat(t.replace(/[$,]/g,""))||0}netSalaryInput.addEventListener("input",()=>{"custom"!==getCurrentRule()?updateBudgetAmounts(getCurrentRule()):(updateBudgetStatus(),updateCharts(),updateSummary(),calculateProjection())}),[needsAmountInput,wantsAmountInput,savingsAmountInput].forEach(t=>{t.addEventListener("input",()=>{updateBudgetStatus(),updateCharts(),updateSummary(),calculateProjection()})}),stocksGrowthInput.addEventListener("input",()=>{updateMathExplanation(),calculateProjection()}),bankGrowthInput.addEventListener("input",()=>{updateMathExplanation(),calculateProjection()}),budgetRuleButtons.forEach(t=>{t.addEventListener("click",()=>{budgetRuleButtons.forEach(t=>t.classList.remove("active")),t.classList.add("active"),"custom"!==t.dataset.rule&&updateBudgetAmounts(t.dataset.rule)})}),projectionYearsSelect.addEventListener("change",calculateProjection),investmentDetailsToggle.addEventListener("click",()=>{var t="true"===investmentDetailsToggle.getAttribute("aria-expanded");investmentDetailsToggle.setAttribute("aria-expanded",!t),mathExplanation.classList.toggle("show"),t||updateMathExplanation()}),document.addEventListener("DOMContentLoaded",()=>{netSalaryInput.value=5e3,needsAmountInput.value=Math.round(2500),wantsAmountInput.value=Math.round(1500),savingsAmountInput.value=Math.round(1e3),initializeTooltips(),initializeCharts(),initializeSliders(),currentChartView="monthly",document.querySelectorAll(".chart-view-btn").forEach(t=>{"monthly"===t.dataset.view?t.classList.add("active"):t.classList.remove("active")}),updateBudgetStatus(),updateCharts(),updateChartView("monthly"),updateInvestmentChartView("monthly"),calculateProjection(),updateSummary(),updateMathExplanation(),stocksCompoundingSelect&&stocksCompoundingSelect.addEventListener("change",function(){stocksCompoundingFrequency=this.value,updateMathExplanation(),calculateProjection()}),bankCompoundingSelect&&bankCompoundingSelect.addEventListener("change",function(){bankCompoundingFrequency=this.value,updateMathExplanation(),calculateProjection()}),document.getElementById("stocks-redeem-frequency").addEventListener("change",function(){stocksRedeemFrequency=this.value,updateMathExplanation(),calculateProjection()}),document.getElementById("bank-interest-type").addEventListener("change",function(){bankCompoundingType=this.value;var t=document.getElementById("bank-compounding").closest(".growth-input");"simple"===bankCompoundingType?t.style.display="none":t.style.display="flex",updateMathExplanation(),calculateProjection()}),window.toggleGrowthBreakdown=toggleGrowthBreakdown,window.toggleAdvancedExplanations=toggleAdvancedExplanations,document.getElementById("bank-redeem-frequency").addEventListener("change",function(){bankRedeemFrequency=this.value,updateMathExplanation(),calculateProjection()});var e=document.getElementById("bank-interest-type");if(e&&"simple"===e.value){let t=document.getElementById("bank-compounding");t&&(e=t.closest(".growth-input"))&&(e.style.display="none")}stocksGrowthPatternSelect.addEventListener("change",function(){stocksGrowthPattern=this.value,updateMathExplanation(),calculateProjection()})});